// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hello.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Proto {
  public static class HelloService
  {
    static readonly string __ServiceName = "proto.HelloService";

    static readonly Marshaller<global::Proto.GetPersonsParam> __Marshaller_GetPersonsParam = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.GetPersonsParam.Parser.ParseFrom);
    static readonly Marshaller<global::Proto.PersonList> __Marshaller_PersonList = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.PersonList.Parser.ParseFrom);
    static readonly Marshaller<global::Proto.Person> __Marshaller_Person = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.Person.Parser.ParseFrom);
    static readonly Marshaller<global::Proto.UpdateResp> __Marshaller_UpdateResp = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.UpdateResp.Parser.ParseFrom);

    static readonly Method<global::Proto.GetPersonsParam, global::Proto.PersonList> __Method_GetPersons = new Method<global::Proto.GetPersonsParam, global::Proto.PersonList>(
        MethodType.Unary,
        __ServiceName,
        "GetPersons",
        __Marshaller_GetPersonsParam,
        __Marshaller_PersonList);

    static readonly Method<global::Proto.Person, global::Proto.UpdateResp> __Method_UpdatePerson = new Method<global::Proto.Person, global::Proto.UpdateResp>(
        MethodType.Unary,
        __ServiceName,
        "UpdatePerson",
        __Marshaller_Person,
        __Marshaller_UpdateResp);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.HelloReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of HelloService</summary>
    public abstract class HelloServiceBase
    {
      /// <summary>
      /// 获取人员列表
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Proto.PersonList> GetPersons(global::Proto.GetPersonsParam request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.UpdateResp> UpdatePerson(global::Proto.Person request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for HelloService</summary>
    public class HelloServiceClient : ClientBase<HelloServiceClient>
    {
      /// <summary>Creates a new client for HelloService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public HelloServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for HelloService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public HelloServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected HelloServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected HelloServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// 获取人员列表
      /// </summary>
      public virtual global::Proto.PersonList GetPersons(global::Proto.GetPersonsParam request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPersons(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 获取人员列表
      /// </summary>
      public virtual global::Proto.PersonList GetPersons(global::Proto.GetPersonsParam request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPersons, null, options, request);
      }
      /// <summary>
      /// 获取人员列表
      /// </summary>
      public virtual AsyncUnaryCall<global::Proto.PersonList> GetPersonsAsync(global::Proto.GetPersonsParam request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPersonsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 获取人员列表
      /// </summary>
      public virtual AsyncUnaryCall<global::Proto.PersonList> GetPersonsAsync(global::Proto.GetPersonsParam request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPersons, null, options, request);
      }
      public virtual global::Proto.UpdateResp UpdatePerson(global::Proto.Person request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdatePerson(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.UpdateResp UpdatePerson(global::Proto.Person request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePerson, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Proto.UpdateResp> UpdatePersonAsync(global::Proto.Person request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdatePersonAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Proto.UpdateResp> UpdatePersonAsync(global::Proto.Person request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePerson, null, options, request);
      }
      protected override HelloServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new HelloServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(HelloServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetPersons, serviceImpl.GetPersons)
          .AddMethod(__Method_UpdatePerson, serviceImpl.UpdatePerson).Build();
    }

  }
}
#endregion
